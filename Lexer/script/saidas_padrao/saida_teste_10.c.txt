IDENTIFIER(foo)
L_PAREN
IDENTIFIER(a)
R_PAREN
L_CURLY_BRACKET
INT
IDENTIFIER(b)
ASSIGN
IDENTIFIER(a)
PLUS
NUM_INTEGER(1)
SEMICOLON
INT
IDENTIFIER(c)
ASSIGN
L_PAREN
IDENTIFIER(short)
R_PAREN
IDENTIFIER(a)
SEMICOLON
IF
L_PAREN
IDENTIFIER(b)
R_PAREN
RETURN
IDENTIFIER(b)
SEMICOLON
RETURN
NUM_INTEGER(1)
SEMICOLON
R_CURLY_BRACKET
INT
IDENTIFIER(funcao)
L_PAREN
INT
IDENTIFIER(a)
COMMA
CHAR
IDENTIFIER(b)
R_PAREN
L_CURLY_BRACKET
INT
IDENTIFIER(i)
SEMICOLON
CHAR
IDENTIFIER(c)
SEMICOLON
NUM_OCTAL(07)
PLUS
NUM_INTEGER(08)
PLUS
NUM_INTEGER(007)
PLUS
NUM_INTEGER(008)
PLUS
NUM_HEXA(0x9)
PLUS
NUM_HEXA(0X9)
SEMICOLON
IDENTIFIER(c)
ASSIGN
MULTIPLY
IDENTIFIER(funcao)
PLUS
STRING(oi mundo)
SEMICOLON
RETURN
L_PAREN
NUM_HEXA(0xa)
PLUS
NUM_HEXA(0XA)
PLUS
NUM_INTEGER(007)
PLUS
NUM_OCTAL(07)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
NUM_INTEGER(1)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(ff)
ASSIGN
L_PAREN
INT
R_PAREN
NUM_INTEGER(23)
DIV
MULTIPLY
IDENTIFIER(i)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(\a)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(\b)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(\f)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(\n)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(\r)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(\t)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(\v)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(\\)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(\')
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(\")
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(\?)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(\0)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(!)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(@)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(#)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER($)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(%)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(^)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(&)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(*)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(()
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER())
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(_)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(?)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER( )
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(+)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(-)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(/)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(.)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(:)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(;)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(<)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(=)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(>)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(,)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER([)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(])
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(})
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER({)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(`)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(~)
SEMICOLON
IDENTIFIER(ch)
ASSIGN
CHARACTER(|)
SEMICOLON
error:lexical:85:11: unterminated comment